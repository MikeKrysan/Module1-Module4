/*
Сиракузская последовательность (последовательность Коллатца) строится так: возьмем натуральное число n; если оно чётное,
то заменим его числом n/2; если же оно нечётное, то заменим его числом n*3+1. Получившееся число — следующее в сиракузской последовательности после числа n.
Затем заменяем получившееся число по тому же правилу, и так далее.

Если проделать такие операции много раз, то мы придем к числу 1, например:

1 -> 4 -> 2 -> 1
10 -> 5 -> 16 -> 8 -> 4 -> 2 -> 1
Ваша задача реализовать метод syracuseSequence(), который принимает число number (number != 1) — первое число будущей последовательности,
 и выводит в консоль две строки, первая: число — количество шагов, нужных для того, чтобы дойти до 1; вторая: числа, которые получались на пути к 1 через ->,
  как в примере.

Пример:
number = 10
Вывод:
6
10 -> 5 -> 16 -> 8 -> 4 -> 2 -> 1
 */

public class A18 {
    public static void syracuseSequence(int number) {
        // write your code here
        int count = 0;
        String numbers= number + "->";


            while(number!= 1) {
                if (number % 2 == 0) {number /= 2;}
                else {
                    number = number * 3 + 1;
                }
                if(number!=1){ numbers += number + "->"; }
                else { numbers += number+""; }
                count++;

            }
            System.out.println(count);
            System.out.println(numbers);
    }

    public static void main(String[] args) {
        syracuseSequence(10);

    }
}
